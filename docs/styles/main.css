/*  normlize */
/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,700");
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/*  mixins */
/*  variables */
/*  typography */
body {
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  color: #777;
  padding: 0;
  margin: 0;
  line-height: 1.5em;
  font-size: 0.8em;
  letter-spacing: 0em;
}

@media screen and (min-width: 480px) {
  body {
    line-height: 1.6em;
    font-size: 0.9em;
  }
}

@media screen and (min-width: 1250px) {
  body {
    line-height: 2em;
  }
}

h1 {
  font-weight: 400;
  line-height: 1.2em;
  font-size: 2em;
  color: #333;
  margin-bottom: 1.2em;
}

body {
  background-color: #278DD1;
}

.container {
  max-width: 1600px;
  margin: 0 auto;
  background-color: #fff;
}

ul {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

.section {
  text-align: center;
  max-width: 900px;
  margin: 0 auto;
  padding: 30px 30px;
}

@media screen and (min-width: 768px) {
  .section {
    padding: 60px 30px;
  }
}

.section p {
  text-align: justify;
}

@media screen and (min-width: 768px) {
  .section p {
    text-align: center;
  }
}

.header {
  box-sizing: border-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: justify;
      justify-content: space-between;
  min-height: 30vh;
  box-shadow: 0 0 800px 40px rgba(0, 0, 0, 0.5) inset;
  background-image: url("https://picsum.photos/1600/900");
  padding: 27px 30px 30px;
  color: #fff;
}

@media screen and (min-width: 768px) {
  .header {
    min-height: 900px;
  }
}

@media screen and (min-width: 1250px) {
  .header {
    padding: 27px 100px 60px;
  }
}

.header .show-more {
  text-align: center;
}

.header .welcome {
  text-align: center;
}

.header .welcome > p:first-child {
  font-weight: 700;
  letter-spacing: 0.3em;
  font-size: 0.73em;
}

.header .welcome .coding {
  margin: 30px 0;
}

.header .welcome .coding h3,
.header .welcome .coding p {
  font-size: 2em;
  line-height: 1.1em;
  font-weight: 300;
  margin: 10px 0;
}

@media screen and (min-width: 768px) {
  .header .welcome .coding h3,
  .header .welcome .coding p {
    font-size: 2.8em;
  }
}

.header .main-nav {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr;
      grid-template-columns: 1fr;
  grid-gap: 1em;
  position: relative;
}

@media screen and (min-width: 768px) {
  .header .main-nav {
    -ms-grid-columns: 1fr 4fr;
        grid-template-columns: 1fr 4fr;
  }
}

.header .main-nav .logo_container {
  position: relative;
  padding: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
      justify-content: flex-end;
  -ms-flex-align: center;
      align-items: center;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
}

.header .main-nav .logo_container .header-logo-link {
  text-align: right;
}

@media screen and (min-width: 768px) {
  .header .main-nav .logo_container .header-logo-link {
    text-align: center;
  }
}

@media screen and (min-width: 768px) {
  .header .main-nav .logo_container {
    position: initial;
    -ms-flex-pack: start;
        justify-content: flex-start;
  }
}

.header .main-nav .top-navigation {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-pack: start;
      justify-content: flex-start;
}

@media screen and (min-width: 768px) {
  .header .main-nav .top-navigation {
    -ms-flex-pack: end;
        justify-content: flex-end;
  }
}

.header .main-nav .top-navigation .nav {
  letter-spacing: 0.2em;
  font-size: 0.78em;
  font-weight: 500;
  float: unset;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: justify;
      justify-content: space-between;
}

@media screen and (min-width: 768px) {
  .header .main-nav .top-navigation .nav {
    -ms-flex-direction: row;
        flex-direction: row;
    font-size: .78em;
  }
}

@media screen and (min-width: 1250px) {
  .header .main-nav .top-navigation .nav {
    letter-spacing: 0.3em;
  }
}

.header .main-nav .top-navigation .nav li {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  margin-bottom: 1em;
}

.header .main-nav .top-navigation .nav li.search {
  width: 23px;
  height: 23px;
  background-image: url("../../images/Search.png");
}

.header .main-nav .top-navigation .nav li a {
  text-decoration: none;
  color: #fff;
  text-transform: uppercase;
  transition: color 300ms ease;
}

.header .main-nav .top-navigation .nav li a:hover {
  transition: color 300ms ease;
  color: #cccccc;
}

@media screen and (min-width: 768px) {
  .header .main-nav .top-navigation .nav li {
    margin-left: 15px;
    margin-bottom: 0;
    text-align: center;
  }
  .header .main-nav .top-navigation .nav li:first-child {
    margin-left: 0;
  }
}

@media screen and (min-width: 1250px) {
  .header .main-nav .top-navigation .nav li {
    margin-left: 25px;
  }
  .header .main-nav .top-navigation .nav li.search {
    margin-left: 60px;
  }
}

.why-us-wrapper {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr;
      grid-template-columns: 1fr;
  -ms-grid-rows: 1fr 1fr;
      grid-template-rows: 1fr 1fr;
  background-color: #F5F5F5;
}

@media screen and (min-width: 768px) {
  .why-us-wrapper {
    -ms-grid-rows: 1fr;
        grid-template-rows: 1fr;
    -ms-grid-columns: 1fr 1fr;
        grid-template-columns: 1fr 1fr;
  }
}

.why-us-wrapper .why-us-image {
  background: url("https://picsum.photos/500/330") no-repeat;
  background-size: cover;
}

.why-us-wrapper .why-us {
  padding: 30px 30px;
}

@media screen and (min-width: 480px) {
  .why-us-wrapper .why-us {
    padding: 60px 30px;
  }
}

@media screen and (min-width: 768px) {
  .why-us-wrapper .why-us {
    padding: 140px 70px;
  }
}

@media screen and (min-width: 768px) {
  .why-us-wrapper .why-us > div {
    max-width: 490px;
  }
}

.why-us-wrapper .why-us > div h1 {
  margin-top: 0;
}

.why-us-wrapper .why-us > div div {
  text-align: justify;
  margin-bottom: 0;
}

@media screen and (min-width: 768px) {
  .why-us-wrapper .why-us > div div {
    text-align: left;
  }
}

.portfolio .section {
  padding: 30px 30px;
}

.portfolio .portfolio-container .postfolio-menu {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  margin-bottom: 60px;
  -ms-flex-direction: column;
      flex-direction: column;
}

@media screen and (min-width: 480px) {
  .portfolio .portfolio-container .postfolio-menu {
    -ms-flex-direction: row;
        flex-direction: row;
  }
}

.portfolio .portfolio-container .postfolio-menu li {
  cursor: pointer;
  text-transform: uppercase;
  color: #3498DB;
  font-weight: 700;
  margin: 0 1em;
  padding: 0.5em;
  transition: all 100ms ease;
}

@media screen and (min-width: 480px) {
  .portfolio .portfolio-container .postfolio-menu li {
    padding: 0em;
  }
  .portfolio .portfolio-container .postfolio-menu li:hover {
    cursor: pointer;
    color: #1d6fa5;
    transition: all 100ms ease;
  }
}

.portfolio .portfolio-container .postfolio-menu li.active {
  cursor: default;
  background-color: #3498DB;
  color: #fff;
}

@media screen and (min-width: 480px) {
  .portfolio .portfolio-container .postfolio-menu li.active {
    background-color: #fff;
    color: #3498DB;
    border-bottom: 2px solid #3498DB;
  }
}

.portfolio .portfolio-container .loading-wrapper {
  animation: FADE-IN 1s 1;
  height: 500px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  background-color: #F5F5F5;
}

.portfolio .portfolio-container .loading-wrapper .loading {
  text-transform: uppercase;
  font-size: 2em;
  color: #3498DB;
}

.portfolio .portfolio-container .gallery-max-height {
  animation: FADE-IN 1s 1;
  overflow: hidden;
  max-height: 800px;
  position: relative;
  transition: all 300ms ease;
}

.portfolio .portfolio-container .gallery-max-height::after {
  pointer-events: none;
  content: "";
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  box-shadow: 0px -10px 20px -5px rgba(0, 0, 0, 0.6) inset;
}

.portfolio .portfolio-container .gallerry-no-max-height {
  transition: all 300ms ease;
}

.portfolio .portfolio-container .btn-wrapper {
  margin: 3em 0;
  text-align: center;
}

.portfolio .portfolio-container .btn-wrapper .view-all-btn {
  background: #fff;
  border: 1px solid #3498DB;
  color: #3498DB;
  padding: 1em 3em;
  font-weight: 700;
  text-transform: uppercase;
  transition: all 100ms ease;
}

.portfolio .portfolio-container .btn-wrapper .view-all-btn:hover {
  cursor: pointer;
  color: #1d6fa5;
  border-color: #1d6fa5;
  transition: all 100ms ease;
}

.portfolio .portfolio-container .btn-wrapper .view-all-btn:disabled {
  cursor: default;
  color: #75b9e7;
  border-color: #75b9e7;
}

.portfolio .portfolio-container .my-masonry-grid {
  display: -ms-flexbox;
  display: flex;
  width: auto;
}

.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image {
  background-clip: padding-box;
  line-height: 0;
  position: relative;
  margin: 0;
}

.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image img {
  width: 100%;
}

.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image .gallery-overlay {
  cursor: default;
  background-color: #3f5062;
  border: 10px solid #d0d0d0;
  position: absolute;
  bottom: 0;
  right: 0;
  top: 0;
  left: 0;
  opacity: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  transition: opacity 100ms ease;
}

.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image .gallery-overlay div h1,
.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image .gallery-overlay div p {
  color: #fff;
}

.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image .gallery-overlay div h1 {
  text-transform: uppercase;
}

.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image .gallery-overlay div p {
  font-size: 1.2em;
  text-transform: capitalize;
  text-align: center;
}

.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image .gallery-overlay div .divider {
  margin-top: 2em;
  width: 50%;
}

.portfolio .portfolio-container .my-masonry-grid .my-masonry-grid_column .gallery-image:hover .gallery-overlay {
  transition: opacity 100ms ease;
  opacity: 0.8;
}

@keyframes FADE-IN {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.footer {
  height: 200px;
  background-color: #F5F5F5;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
